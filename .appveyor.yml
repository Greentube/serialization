configuration: Release
init:
  - git config --global core.autocrlf true
  - ps: >-
      # If there's a tag, use that as the version.
      Update-AppveyorBuild -Version $(if($env:APPVEYOR_REPO_TAG -eq "true"){"$env:APPVEYOR_REPO_TAG_NAME"})
version: '1.0.0-alpha-{build}'
# Will build dependencies in release (optimize and portable pdbs) mode:
build_script:
  - cmd: for /f %%a in ('dir /b test') do dotnet test -c Release test/%%a/%%a.csproj
after_build:
# packing the current Release build of all projects under src/
  - cmd: for /f %%a in ('dir /b src') do dotnet pack --no-build -c Release src/%%a/%%a.csproj
# Will build in Coverage mode (full pdbs) and upload coverage to Codecov
on_success:
  - ps: .\coverage.ps1 -UploadCodecov
environment:
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
test: off
deploy: off
os: Visual Studio 2017
dotnet_csproj:
  patch: true
  file: 'src\**\*.csproj'
  version: '{version}'
  package_version: '{version}'
artifacts:
- path: '**\*.nupkg'
  name: serialization-nuget-packages
# builds on tags will publish all nupkgs to GitHub as a Draft release
deploy:
  release: $(appveyor_build_version)
  provider: GitHub
  auth_token:
    secure: Mt9wdODnWpZHwq/4E9w7VRU2PmTDREcc4dron+bhCQE8rQ+cL5orxcoRs6v+z2II
  artifact: /.*\.nupkg/
  draft: true
  on:
    appveyor_repo_tag: true